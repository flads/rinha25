x-service-templates:
  api: &api
    build:
      context: ./api
      dockerfile: ./Dockerfile
    user: "1000:1001"
    networks:
      - main-network
      - payment-processor

  worker: &worker
    build:
      context: ./worker
      dockerfile: ./Dockerfile
    container_name: worker
    networks:
      - main-network
      - payment-processor
    depends_on:
      redis:
        condition: service_started

services:
  api-1:
    <<: *api
    container_name: api-1
    volumes:
      - sockets:/tmp/sockets
    environment:
      - SOCKET_PATH=/tmp/sockets/api-1.sock
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"

  api-2:
    <<: *api
    container_name: api-2
    volumes:
      - sockets:/tmp/sockets
    environment:
      - SOCKET_PATH=/tmp/sockets/api-2.sock
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"

  database:
    build:
      context: ./database
      dockerfile: ./Dockerfile
    networks:
      - main-network
      - payment-processor
    container_name: database
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "50MB"

  worker-1:
    <<: *worker
    container_name: worker-1
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"

  worker-2:
    <<: *worker
    container_name: worker-2
    deploy:
      resources:
        limits:
          cpus: "0.4"
          memory: "100MB"

  nginx:
    image: nginx:alpine
    volumes:
      - ./nginx:/var/www
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - sockets:/sockets
    user: "1000:1001"
    ports:
      - "9999:9999"
    networks:
      - main-network
    depends_on:
      api-1:
        condition: service_started
      api-2:
        condition: service_started
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "20MB"

  redis:
    image: valkey/valkey:8.1-alpine
    ports:
      - '6379:6379'
    networks:
      - main-network
    command: >
      redis-server
      --save ""
      --appendonly no
      --maxmemory 50mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 30
      --timeout 0
      --tcp-backlog 65535
      --databases 1
      --maxclients 5000
      --rdbcompression no
      --rdbchecksum no
      --hz 100
      --lazyfree-lazy-eviction yes
      --lazyfree-lazy-expire yes
      --lazyfree-lazy-server-del yes
    deploy:
      resources:
        limits:
          cpus: "0.2"
          memory: "30MB"

volumes:
  sockets:

networks:
  main-network:
    driver: bridge
  payment-processor:
    external: true